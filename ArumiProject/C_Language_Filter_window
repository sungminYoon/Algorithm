//
// Created by SungMin Yoon on 2017. 10. 23..
// Copyright @ 2017년 SungMin Yoon. All rights reserved.
//

* Data Verification
* reference -> https://docs.scipy.org/doc/numpy/reference/generated/numpy.blackman.html & /numpy.hanning.html & /numpy.hamming.html
* The results obtained from the above sources were compared. Trust and write.
* Thank you.


#include <math.h>

// 3.14 파이 2배수 4배수 입니다.
const float PiX2 = 6.283185;
const float PiX4 = 12.56637;

//Hanning window
void ALhanning(float * window, int order){
  int half, i, idx, N;
  N = order;
  half = (N+1)/2;

  window[0] = 0;
  for(i=0; i<half; i++){
    window[i] = 0.5 * (1 - cosf(PiX2*i / (N-1)));
  }

  idx = half-2;
  for(i=half; i<N; i++) {
    window[i] = window[idx+1];
    idx--;
  }
}


//Hamming window
void ALhamming(float * window, int order){
  int half, i, idx, N;
  N = order;
  half = (N+1)/2;

  window[0] = 0;
  for(i=0; i<half; i++){
    window[i] = 0.54-0.46 * cosf(PiX2*i / (N-1));
  }

  idx = half-2;
  for(i=half; i<N; i++) {
    window[i] = window[idx+1];
    idx--;
  }
}

//Blackman window
void ALblackman(float * window, int order){
  int half, i, idx, N;
  N = order;
  half = (N+1)/2;

  window[0] = 0;
  for(i=0; i<half; i++){
    float v = 0.42-0.5 * cosf(PiX2*i / (N-1)) + 0.08 * cosf(PiX4*i / (N-1));
    window[i] = 10 * v;
  }

  idx = half-2;
  for(i=half; i<N; i++) {
    window[i] = window[idx+1];
    idx--;
  }
}